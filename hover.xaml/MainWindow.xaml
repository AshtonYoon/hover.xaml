<Window x:Class="hover.xaml.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:hover.xaml"
        mc:Ignorable="d"
        Title="MainWindow" WindowState="Maximized">
    <Grid Width="Auto" Height="Auto">
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="10" Content="Grow" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <ScaleTransform x:Name="GrowTransform" ScaleX="1" ScaleY="1"  />
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="GrowTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="GrowTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="GrowTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="GrowTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="120 10 10 10" Content="Shrink" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <ScaleTransform x:Name="ShrinkTransform" ScaleX="1" ScaleY="1"  />
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ShrinkTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="0.9" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="ShrinkTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0.9" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ShrinkTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="ShrinkTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button Name="PulseButton" VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="230 10 10 10" Content="Pulse" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <ScaleTransform x:Name="PulseTransform" ScaleX="1" ScaleY="1"  />
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Name="PulseStoryBoard" Completed="PulseStoryboardCompleted">
                            <DoubleAnimation Name="PulseXAnimation" Storyboard.TargetName="PulseTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" From="1.0" To="0.9" Duration="0:0:0.3" AutoReverse="True"/>
                            <DoubleAnimation Name="PulseYAnimation" Storyboard.TargetName="PulseTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" From="1.0" To="0.9" Duration="0:0:0.3" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PulseTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="PulseTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="340 10 10 10" Content="Pulse Grow" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <ScaleTransform x:Name="PulseGrowTransform" ScaleX="1" ScaleY="1"  />
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PulseGrowTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.3" AutoReverse="True" RepeatBehavior="Forever"/>
                            <DoubleAnimation Storyboard.TargetName="PulseGrowTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.3" AutoReverse="True" RepeatBehavior="Forever"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PulseGrowTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="PulseGrowTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="450 10 10 10" Content="Pulse Shrink" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <ScaleTransform x:Name="PulseShrinkTransform" ScaleX="1" ScaleY="1"  />
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PulseShrinkTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="0.9" Duration="0:0:0.3" AutoReverse="True" RepeatBehavior="Forever"/>
                            <DoubleAnimation Storyboard.TargetName="PulseShrinkTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0.9" Duration="0:0:0.3" AutoReverse="True" RepeatBehavior="Forever"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PulseShrinkTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="PulseShrinkTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="560 10 10 10" Content="Push" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <ScaleTransform x:Name="PushTransform" ScaleX="1" ScaleY="1"  />
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PushTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="0.8" Duration="0:0:0.15" AutoReverse="True"/>
                            <DoubleAnimation Storyboard.TargetName="PushTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0.8" Duration="0:0:0.15" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PushTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="PushTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="670 10 10 10" Content="Pop" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <ScaleTransform x:Name="PopTransform" ScaleX="1" ScaleY="1"  />
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PopTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.2" Duration="0:0:0.15" AutoReverse="True"/>
                            <DoubleAnimation Storyboard.TargetName="PopTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.2" Duration="0:0:0.15" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PopTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="PopTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="780 10 10 10" Content="Bounce In" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <ScaleTransform x:Name="BounceInTransform" ScaleX="1" ScaleY="1"  />
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BounceInTransform" From="1.0" To="1.2" Duration="0:0:0.6" Storyboard.TargetProperty="(ScaleTransform.ScaleX)">
                                <DoubleAnimation.EasingFunction>
                                    <BounceEase Bounces="2" EasingMode="EaseOut" Bounciness="2" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="BounceInTransform" From="1.0" To="1.2" Duration="0:0:0.6" Storyboard.TargetProperty="(ScaleTransform.ScaleY)">
                                <DoubleAnimation.EasingFunction>
                                    <BounceEase Bounces="2" EasingMode="EaseOut" Bounciness="2" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BounceInTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="BounceInTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="890 10 10 10" Content="Bounce Out" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <ScaleTransform x:Name="BounceOutTransform" ScaleX="1" ScaleY="1"  />
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BounceOutTransform" From="1.0" To="0.8" Duration="0:0:0.6" Storyboard.TargetProperty="(ScaleTransform.ScaleX)">
                                <DoubleAnimation.EasingFunction>
                                    <BounceEase Bounces="2" EasingMode="EaseOut" Bounciness="2" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="BounceOutTransform" From="1.0" To="0.8" Duration="0:0:0.6" Storyboard.TargetProperty="(ScaleTransform.ScaleY)">
                                <DoubleAnimation.EasingFunction>
                                    <BounceEase Bounces="2" EasingMode="EaseOut" Bounciness="2" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BounceOutTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="BounceOutTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="1000 10 10 10" Content="Rotate" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <RotateTransform x:Name="rotateTransform" Angle="0"/>
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="rotateTransform" To="4" Duration="0:0:0.3" Storyboard.TargetProperty="(RotateTransform.Angle)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="rotateTransform" To="0" Duration="0:0:0.3" Storyboard.TargetProperty="(RotateTransform.Angle)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="50" Margin="1110 10 10 10" Content="Grow Rotate" RenderTransformOrigin="0.5 0.5">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="growRotateScaleTransform" ScaleX="1" ScaleY="1"/>
                    <RotateTransform x:Name="growRotateRotateTransform" Angle="0"/>
                </TransformGroup>
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="growRotateScaleTransform" To="1.1" Duration="0:0:0.3" Storyboard.TargetProperty="(ScaleTransform.ScaleX)"/>
                            <DoubleAnimation Storyboard.TargetName="growRotateScaleTransform" To="1.1" Duration="0:0:0.3" Storyboard.TargetProperty="(ScaleTransform.ScaleY)"/>
                            <DoubleAnimation Storyboard.TargetName="growRotateRotateTransform" To="4" Duration="0:0:0.3" Storyboard.TargetProperty="(RotateTransform.Angle)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="growRotateScaleTransform" To="1" Duration="0:0:0.3" Storyboard.TargetProperty="(ScaleTransform.ScaleX)"/>
                            <DoubleAnimation Storyboard.TargetName="growRotateScaleTransform" To="1" Duration="0:0:0.3" Storyboard.TargetProperty="(ScaleTransform.ScaleY)"/>
                            <DoubleAnimation Storyboard.TargetName="growRotateRotateTransform" To="0" Duration="0:0:0.3" Storyboard.TargetProperty="(RotateTransform.Angle)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
    </Grid>
</Window>
